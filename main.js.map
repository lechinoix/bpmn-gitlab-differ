{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/camunda/camunda.service.ts","./src/app/components/bpmn/bpmn-diff-reader/bpmn-diff-reader.component.ts","./src/app/components/bpmn/bpmn-diff-reader/bpmn-diff-reader.component.html","./src/app/components/bpmn/bpmn-diff.service.ts","./src/app/components/bpmn/bpmn-viewer/bpmn-viewer.component.ts","./src/app/components/bpmn/bpmn-viewer/bpmn-viewer.component.html","./src/app/components/bpmn/bpmn.module.ts","./src/app/components/bpmn/history-viewer/history-viewer.component.ts","./src/app/components/gitlab/gitlab.service.ts","./src/app/pages/differ/differ.component.ts","./src/app/pages/differ/differ.component.html","./src/app/pages/history/history.component.ts","./src/app/pages/history/history.component.html","./src/app/pipes/filename-extractor.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DifferComponent } from './pages/differ/differ.component';\nimport { HistoryComponent } from './pages/history/history.component';\n\nconst routes: Routes = [\n  {\n    path: 'differ',\n    component: DifferComponent,\n  },\n  {\n    path: 'history',\n    component: HistoryComponent,\n  },\n  {\n    path: '',\n    redirectTo: 'differ',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'bpmn-gitlab-differ';\n}\n","<nav class=\"navbar\">\n  <span>BPMN Gitlab diff</span>\n</nav>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { BpmnModule } from './components/bpmn/bpmn.module';\nimport {ExtractFilenamePipe} from './pipes/filename-extractor.pipe';\nimport { HistoryComponent } from './pages/history/history.component';\nimport { DifferComponent } from './pages/differ/differ.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExtractFilenamePipe,\n    HistoryComponent,\n    DifferComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatListModule,\n    MatSidenavModule,\n    BpmnModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BpmnXmlResponse, Incident, ProcessInstance } from './camunda.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CamundaService {\n  private defaultCamundaApiUrl = 'https://localhost:8080/workflow/camunda/engine-rest';\n\n  set baseApiUrl(baseApiUrl: string) {\n    localStorage.baseCamundaApiUrl = baseApiUrl;\n  }\n\n  get baseApiUrl(): string {\n    return localStorage.baseCamundaApiUrl || this.defaultCamundaApiUrl;\n  }\n\n  set username(value: string) {\n    localStorage.camundaUsername = value;\n  }\n\n  get username(): string {\n    return localStorage.camundaUsername;\n  }\n\n  set password(value: string) {\n    localStorage.camundaPassword = value;\n  }\n\n  get password(): string {\n    return localStorage.camundaPassword;\n  }\n\n  constructor(private http: HttpClient) {}\n\n  retrieveBpmn = (definitionKey: string) => {\n    return this.http.get<BpmnXmlResponse>(\n      `${this.baseApiUrl}/process-definition/key/${definitionKey}/xml`,\n      this.getAuthorizationHeaders()\n    );\n  };\n\n  retrieveExecution = (processInstanceId: string) => {\n    return this.http.post<any>(\n      `${this.baseApiUrl}/history/activity-instance`,\n      { processInstanceId },\n      this.getAuthorizationHeaders()\n    );\n  };\n\n  retrieveProcessInstance = (businessKey: string, processDefinitionKey?: string) => {\n    return this.http.post<ProcessInstance[]>(\n      `${this.baseApiUrl}/history/process-instance`,\n      { processInstanceBusinessKey: businessKey, processDefinitionKey },\n      this.getAuthorizationHeaders()\n    );\n  };\n\n  retrieveProcessInstanceWithProcessInstanceId = (processInstanceId: string) => {\n    return this.http.get<ProcessInstance>(\n      `${this.baseApiUrl}/history/process-instance/${processInstanceId}`,\n      this.getAuthorizationHeaders()\n    );\n  };\n\n  retrieveIncidents = (processInstanceId: string) => {\n    return this.http.get<Incident[]>(`${this.baseApiUrl}/history/incident`, {\n      ...this.getAuthorizationHeaders(),\n      params: { processInstanceId }\n    });\n  };\n\n  getAuthorizationHeaders = () => ({\n    headers: {\n      Authorization: this.getBasicPassword(),\n      'x-camunda-auth': 'enabled'\n    }\n  });\n\n  private getBasicPassword = () => {\n    return `Basic ${btoa(this.username + ':' + this.password)}`;\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BPMNDiffService } from '../bpmn-diff.service';\n\n@Component({\n  selector: 'app-bpmn-diff-reader',\n  templateUrl: './bpmn-diff-reader.component.html',\n  styleUrls: ['./bpmn-diff-reader.component.scss']\n})\nexport class BpmnDiffReaderComponent implements OnInit {\n  diffList: any[] = [];\n  displayedColumns: string[] = ['name', 'changeType', 'type'];\n\n  constructor(\n    public bpmnDiffService: BPMNDiffService,\n  ) { }\n\n  ngOnInit(): void {\n    this.bpmnDiffService.diffResult$.subscribe(diffList => {\n      this.diffList = diffList.filter(({ changeType, $type }) => changeType !== '_layoutChanged' && $type !== 'bpmn:SequenceFlow');\n    });\n  }\n}\n","<table mat-table [dataSource]=\"diffList\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef> Type </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n    </ng-container>\n\n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"changeType\">\n        <th mat-header-cell *matHeaderCellDef> Change Type </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.changeType}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","/* eslint @typescript-eslint/no-non-null-assertion: \"off\" */\n\nimport { Injectable } from '@angular/core';\nimport {BehaviorSubject, forkJoin, from} from 'rxjs';\n\nimport { diff } from 'bpmn-js-differ';\nimport BpmnModdle from 'bpmn-moddle';\nimport { BPMNDiff } from '../gitlab/gitlab.service';\n\ntype Diff = {\n  $type: string,\n  changeType: string,\n  id: string,\n  name: string\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BPMNDiffService {\n  bpmnToCompare?: any[] = [null, null];\n  diffResult$: BehaviorSubject<Diff[]> = new BehaviorSubject([]);\n\n  async setBpmns(bpmns: BPMNDiff): Promise<void> {\n    if (Object.values(bpmns).every(Boolean)) {\n      forkJoin(\n        [\n          from(this.parseBpmn(bpmns.oldVersion)),\n          from(this.parseBpmn(bpmns.newVersion))\n        ]\n      ).subscribe((parsedBpmns) => {\n        this.bpmnToCompare = parsedBpmns;\n        this.setDiffResult();\n      });\n    }\n  }\n\n  setDiffResult(): void {\n    this.diffResult$.next(this.bpmnToCompare.every(Boolean)\n      ? this.getNewDiff()\n      : []\n    );\n  }\n\n  parseBpmn(bpmn): Promise<any> {\n    return new Promise((resolve, reject) => new BpmnModdle().fromXML(bpmn, {}, (err, element) => {\n      if (err) {\n        return reject(err);\n      }\n      resolve(element);\n    }));\n  }\n\n  getNewDiff = (): Diff[] => {\n    return this.flattenDiffs(diff(...this.bpmnToCompare));\n  }\n\n  flattenDiffs(diffResult): any[] {\n    const diffList = [];\n    for (const changeType of Object.keys(diffResult)) {\n      for (const name of Object.keys(diffResult[changeType])) {\n        diffList.push({ ...diffResult[changeType][name], changeType, name });\n      }\n    }\n    return diffList;\n  }\n}\n","import { Component, Input, AfterViewInit } from '@angular/core';\nimport NavigatedViewer from 'bpmn-js/lib/NavigatedViewer';\nimport { BPMNDiffService } from '../bpmn-diff.service';\n\n@Component({\n  selector: 'app-bpmn-viewer',\n  templateUrl: './bpmn-viewer.component.html',\n  styleUrls: ['./bpmn-viewer.component.scss']\n})\nexport class BpmnViewerComponent implements AfterViewInit {\n  bpmnValue: string;\n  @Input() version: 'old' | 'new';\n  @Input() set bpmn(value: string) {\n    this.bpmnValue = value;\n    this.updateViewer(value);\n  }\n  viewer: any;\n\n  constructor(\n    public bpmnDiffService: BPMNDiffService,\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.viewer = new NavigatedViewer({\n      container: `.${this.version}-viewer`\n    });\n    this.bpmnDiffService.diffResult$.subscribe(diffResult => {\n      if (Array.isArray(diffResult)) {\n        diffResult.forEach(({ id, changeType }) => this.applyVisualToElement(id, changeType));\n      }\n    });\n  }\n\n  updateViewer = async (bpmn: string): Promise<void> => {\n    if (this.viewer == null) {\n      return;\n    }\n    await this.viewer.importXML(bpmn);\n    this.viewer.get('canvas').zoom('fit-viewport');\n  }\n\n  applyVisualToElement = (elementId: string, effectClass: string): void => {\n    try {\n      this.viewer.get('canvas').addMarker(elementId, effectClass);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n}\n","<p>{{version | uppercase }}</p>\n<div class=\"diff-section {{version + '-viewer'}}\"></div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatTableModule } from '@angular/material/table';\nimport { BpmnDiffReaderComponent } from './bpmn-diff-reader/bpmn-diff-reader.component';\nimport { BpmnViewerComponent } from './bpmn-viewer/bpmn-viewer.component';\nimport { HistoryViewerComponent } from './history-viewer/history-viewer.component';\n\n@NgModule({\n  imports: [BrowserModule, MatTableModule],\n  declarations: [BpmnDiffReaderComponent, BpmnViewerComponent, HistoryViewerComponent],\n  exports: [BpmnDiffReaderComponent, BpmnViewerComponent, HistoryViewerComponent]\n})\nexport class BpmnModule {}\n","import { Component, Input, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport NavigatedViewer from 'bpmn-js/lib/NavigatedViewer';\nimport { BPMNDiffService } from '../bpmn-diff.service';\nimport { InteractionEvent } from '../../../bpmnjs.types';\nimport { Incident } from 'src/app/camunda/camunda.types';\n\n@Component({\n  selector: 'app-history-viewer',\n  templateUrl: './history-viewer.component.html',\n  styleUrls: ['./history-viewer.component.scss']\n})\nexport class HistoryViewerComponent implements AfterViewInit {\n  bpmnValue: string;\n  historyValue: any = null;\n  private _incidents: Incident[] = null;\n\n  @Input() set bpmn(value: string) {\n    this.bpmnValue = value;\n    this.updateViewer(value);\n  }\n\n  @Input() set history(value: any) {\n    this.clearHistory();\n    this.historyValue = value;\n    this.updateHistory();\n  }\n\n  @Input() set incidents(incidents: Incident[]) {\n    this._incidents = incidents;\n    this.handleIncidents();\n  }\n\n  @Output() calledElement = new EventEmitter<string>();\n\n  viewer: any;\n\n  constructor(public bpmnDiffService: BPMNDiffService) {}\n\n  ngAfterViewInit(): void {\n    this.viewer = new NavigatedViewer({\n      container: `.history-viewer`\n    });\n\n    const eventBus = this.viewer.get('eventBus');\n\n    eventBus.on('element.click', (event: InteractionEvent) => {\n      if (event.element.type === 'bpmn:CallActivity') {\n        this.calledElement.emit(event.element.businessObject.calledElement);\n      }\n    });\n  }\n\n  updateViewer = async (bpmn: string): Promise<void> => {\n    if (this.viewer == null) {\n      return;\n    }\n    await this.viewer.importXML(bpmn);\n    this.viewer.get('canvas').zoom('fit-viewport');\n  };\n\n  updateHistory(): void {\n    if (this.historyValue === null) {\n      return;\n    }\n\n    this.historyValue.forEach(element => {\n      const state = element.endTime ? 'finished' : 'started';\n      this.applyVisualToElement(element.activityId, state);\n    });\n  }\n\n  clearHistory = () => {\n    if (this.historyValue === null) {\n      return;\n    }\n\n    this.historyValue.forEach(element => {\n      const state = element.endTime ? 'finished' : 'started';\n      this.removeVisualToElement(element.activityId, state);\n    });\n  };\n\n  handleIncidents = () => {\n    if (this._incidents == null) {\n      return;\n    }\n\n    const overlays = this.viewer.get('overlays');\n\n    this._incidents.forEach(incident => {\n      if (incident.open) {\n        overlays.add(incident.activityId, {\n          position: {\n            top: -5,\n            left: -5\n          },\n          html: '<div class=\"incident\">!</div>'\n        });\n      }\n    });\n  };\n\n  applyVisualToElement = (elementId: string, effectClass: string): void => {\n    try {\n      this.viewer.get('canvas').addMarker(elementId, effectClass);\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  removeVisualToElement = (elementId: string, effectClass: string): void => {\n    try {\n      this.viewer.get('canvas').removeMarker(elementId, effectClass);\n    } catch (e) {\n      // noop\n    }\n  };\n}\n","/* eslint @typescript-eslint/no-non-null-assertion: \"off\" */\n\nimport { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BehaviorSubject, forkJoin, Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\ntype MergeRequestBranches = { targetBranch: string, sourceBranch: string };\ntype Project = { id: string, mergeRequest: MergeRequestBranches };\ntype Comparison = {\n  sourceBranch\n  diffs: Diff[]\n};\ntype Diff = {\n  old_path: string,\n  new_path: string,\n  diff: string,\n  new_file: boolean,\n  renamed_file: boolean,\n  deleted_file: boolean\n};\nexport type BPMNDiff = {\n  oldVersion: string,\n  newVersion: string\n};\nexport type BPMNDiffs = {\n  [filename: string]: BPMNDiff\n};\ntype GraphQLResponse<T> = { data: T };\ntype File = { content: string };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitlabService {\n  private token: string;\n  private baseURL: string;\n  private options: {};\n  public isLoading$ = new BehaviorSubject<boolean>(false);\n\n  constructor(private http: HttpClient) {\n    this.token = localStorage.getItem('gitToken');\n    if (!this.token) {\n      console.warn('You should set your gitToken in localStorage using URL param');\n    }\n    this.options = { headers: new HttpHeaders().set('Authorization', `Bearer ${this.token}`) };\n  }\n\n  public getBPMNContentsForMergeRequest(repositoryPath: string, mergeRequestId: string): Observable<BPMNDiffs> {\n    return this.projectMergeRequest$(repositoryPath, mergeRequestId).pipe(\n      tap(() => {\n        this.isLoading$.next(true);\n      }),\n      map(project => ({\n        ...project,\n        id: /gid:\\/\\/gitlab\\/Project\\/(\\d+)/.exec(project.id)[1]\n      })),\n      switchMap(project => forkJoin([\n        of(project),\n        this.commitsDiff$(project.id, project.mergeRequest.sourceBranch, project.mergeRequest.targetBranch)\n      ])),\n      switchMap(([project, comparison]) => forkJoin(\n        [...comparison.diffs.filter(this.diffIsBPMN).map(diff => forkJoin([\n          of(diff.new_path),\n          this.fileContent$(project.id, diff.old_path, project.mergeRequest.targetBranch),\n          this.fileContent$(project.id, diff.new_path, project.mergeRequest.sourceBranch)\n        ])\n      )])),\n      map((bpmnDiffs) =>\n        bpmnDiffs.reduce((acc, [filePath, ...diff]) => ({\n          ...acc,\n          [filePath]: {\n            oldVersion: diff[0],\n            newVersion: diff[1]\n          }\n        }),\n        {}\n      )),\n      tap(() => {\n        this.isLoading$.next(false);\n      })\n  );\n  }\n\n  private projectMergeRequest$(repositoryPath: string, mergeRequestId: string): Observable<Project> {\n    const query = `\n    {\n      project (fullPath: \"${repositoryPath}\") {\n        id\n        mergeRequest(iid: \"${mergeRequestId}\") {\n          targetBranch\n          sourceBranch\n        }\n      }\n    }`;\n    return this.http.post<GraphQLResponse<{ project: Project }>>(\n      this.baseURL + environment.gitProvider.graphQLPath,\n      { query },\n      this.options\n    ).pipe(map(result => result?.data?.project));\n  }\n\n  private commitsDiff$(projectId: string, sourceBranch: string, targetBranch: string): Observable<Comparison> {\n    return this.http.get<Comparison>(\n      `${this.baseURL}${environment.gitProvider.restPath}/projects/${projectId}/repository/compare?from=${targetBranch}&to=${sourceBranch}`,\n      this.options\n    );\n  }\n\n  private fileContent$(projectId: string, filePath: string, branchName: string): Observable<string> {\n   return this.http.get<File>(\n     `${this.baseURL + environment.gitProvider.restPath}/projects/${projectId}/repository/files/${encodeURIComponent(filePath)}?ref=${branchName}`,\n     this.options\n   ).pipe(map(result => atob(result.content)));\n  }\n\n  private diffIsBPMN = (diff: Diff) => /(.*)\\.bpmn/.test(diff.old_path) && /(.*)\\.bpmn/.test(diff.new_path);\n\n  public setbaseURL(baseURL: string): void {\n    this.baseURL = baseURL;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BPMNDiffs, BPMNDiff, GitlabService } from '../../components/gitlab/gitlab.service';\nimport { BPMNDiffService } from '../../components/bpmn/bpmn-diff.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-differ',\n  templateUrl: './differ.component.html',\n  styleUrls: ['./differ.component.scss']\n})\nexport class DifferComponent {\n  bpmnDiffs: BPMNDiffs = {};\n  selectedFilePath: string;\n  oldVersion = 'old';\n  newVersion = 'new';\n  pageReady: Observable<boolean>;\n\n  constructor(private activatedRoute: ActivatedRoute, private gitlabService: GitlabService, private bpmnDiffService: BPMNDiffService) {\n    this.pageReady = this.gitlabService.isLoading$.pipe(map(isLoading => !isLoading));\n    this.activatedRoute.queryParams.subscribe(params => {\n      const { mergeRequestId, repositoryPath, gitlabBaseUrl, gitToken } = params;\n      if (!!gitToken) {\n        this.setGitToken(gitToken);\n      }\n      if (!!mergeRequestId && !!repositoryPath && !!gitlabBaseUrl) {\n        this.gitlabService.setbaseURL(gitlabBaseUrl);\n        this.gitlabService.getBPMNContentsForMergeRequest(repositoryPath, mergeRequestId).subscribe(this.setBpmnDiffs);\n      }\n    });\n  }\n\n  get selectedDiff(): BPMNDiff {\n    return this.bpmnDiffs.hasOwnProperty(this.selectedFilePath)\n      ? this.bpmnDiffs[this.selectedFilePath]\n      : { oldVersion: '', newVersion: '' };\n  }\n\n  get availableBpmnFilePaths(): string[] {\n    return Object.keys(this.bpmnDiffs);\n  }\n\n  setBpmnDiffs = (bpmnDiffs: BPMNDiffs): void => {\n    this.bpmnDiffs = bpmnDiffs;\n  };\n\n  changeSelectedFilePath = (filePath: string): void => {\n    this.selectedFilePath = filePath;\n    this.bpmnDiffService.setBpmns(this.bpmnDiffs[filePath]);\n  };\n\n  setGitToken = (gitToken: string) => {\n    localStorage.gitToken = gitToken;\n  };\n}\n","<div class=\"container\">\n  <div class=\"sidebar\">\n    <ng-container *ngIf=\"pageReady | async; else loader\">\n      <div *ngFor=\"let filePath of availableBpmnFilePaths\">\n        <button (click)=\"changeSelectedFilePath(filePath)\">{{ filePath | extractFilename }}</button>\n      </div>\n    </ng-container>\n  </div>\n  <app-bpmn-viewer class=\"diff-viewer\" [bpmn]=\"selectedDiff.oldVersion\" [version]=\"oldVersion\"></app-bpmn-viewer>\n  <app-bpmn-viewer class=\"diff-viewer\" [bpmn]=\"selectedDiff.newVersion\" [version]=\"newVersion\"></app-bpmn-viewer>\n  <app-bpmn-diff-reader class=\"diff-reader\"></app-bpmn-diff-reader>\n  <ng-template #loader>\n    <p>It is loading</p>\n  </ng-template>\n</div>\n","import { Component } from '@angular/core';\nimport { CamundaService } from '../../camunda/camunda.service';\nimport { BpmnXmlResponse, Incident, ProcessInstance } from '../../camunda/camunda.types';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss']\n})\nexport class HistoryComponent {\n  bpmn: string = null;\n  processInstance: ProcessInstance = null;\n  history: any = null;\n  incidents: Incident[];\n\n  get username(): string {\n    return this.camundaService.username;\n  }\n\n  setUsername(value: string): void {\n    this.camundaService.username = value;\n  }\n\n  get password(): string {\n    return this.camundaService.password;\n  }\n\n  setPassword(value: string): void {\n    this.camundaService.password = value;\n  }\n\n  get baseApiUrl(): string {\n    return this.camundaService.baseApiUrl;\n  }\n\n  setBaseApiUrl(value: string): void {\n    this.camundaService.baseApiUrl = value;\n  }\n\n  get processKey(): string {\n    return localStorage.processKey || '';\n  }\n\n  setProcessKey(value: string): void {\n    localStorage.processKey = value;\n  }\n\n  get businessKey(): string {\n    return localStorage.businessKey || '';\n  }\n\n  setBusinessKey(value: string): void {\n    localStorage.businessKey = value;\n  }\n\n  constructor(private camundaService: CamundaService) {}\n\n  retrieveInformations(): void {\n    this.camundaService\n      .retrieveProcessInstance(this.businessKey, this.processKey)\n      .subscribe(processInstances => this.handleProcessInstance(processInstances[0]));\n  }\n\n  retrieveInformationsWithProcessInstanceId(processInstanceId: string): void {\n    this.camundaService\n      .retrieveProcessInstanceWithProcessInstanceId(processInstanceId)\n      .subscribe(this.handleProcessInstance);\n  }\n\n  handleProcessInstance = (processInstance: ProcessInstance) => {\n    this.processInstance = processInstance;\n\n    this.setProcessKey(processInstance.processDefinitionKey);\n\n    this.camundaService.retrieveBpmn(this.processKey).subscribe((xmlResponse: BpmnXmlResponse) => {\n      this.bpmn = xmlResponse.bpmn20Xml;\n      this.camundaService\n        .retrieveExecution(processInstance.id)\n        .subscribe((execution: any) => (this.history = execution));\n      this.camundaService.retrieveIncidents(processInstance.id).subscribe(incidents => (this.incidents = incidents));\n    });\n  };\n\n  onCalledElement(calledElement: string): void {\n    this.setProcessKey(calledElement);\n    this.retrieveInformations();\n  }\n\n  viewParent = () => {\n    this.retrieveInformationsWithProcessInstanceId(this.processInstance.superProcessInstanceId);\n  };\n}\n","<div class=\"container\">\n  <div class=\"sidebar\">\n    <label>Username: </label>\n    <input placeholder=\"user\" [value]=\"username\" (change)=\"setUsername($event.target.value)\" />\n\n    <label>Password: </label>\n    <input type=\"password\" placeholder=\"pwd\" [value]=\"password\" (change)=\"setPassword($event.target.value)\" />\n\n    <label>Base Camunda api url: </label>\n    <input placeholder=\"camunda url\" [value]=\"baseApiUrl\" (change)=\"setBaseApiUrl($event.target.value)\" />\n\n    <label>Process Definition Key: </label>\n    <input placeholder=\"definition key\" [value]=\"processKey\" (change)=\"setProcessKey($event.target.value)\" />\n\n    <label>Business Key: </label>\n    <input placeholder=\"business key\" [value]=\"businessKey\" (change)=\"setBusinessKey($event.target.value)\" />\n\n    <button (click)=\"retrieveInformations()\">Submit</button>\n    <button *ngIf=\"processInstance && processInstance.superProcessInstanceId\" (click)=\"viewParent()\">\n      View Parent\n    </button>\n  </div>\n\n  <app-history-viewer\n    class=\"history-viewer\"\n    [bpmn]=\"bpmn\"\n    [history]=\"history\"\n    [incidents]=\"incidents\"\n    (calledElement)=\"onCalledElement($event)\"\n  ></app-history-viewer>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'extractFilename'})\nexport class ExtractFilenamePipe implements PipeTransform {\n  transform(value: string): string {\n    return /.*\\/(.*)$/.exec(value)[1];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  gitProvider: {\n    graphQLPath: '/api/graphql',\n    restPath: '/api/v4'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}